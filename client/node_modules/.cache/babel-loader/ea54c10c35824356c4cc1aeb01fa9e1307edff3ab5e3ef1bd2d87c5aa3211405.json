{"ast":null,"code":"// client/src/features/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Fake login logic (replace with real API call)\nexport const loginUser = createAsyncThunk('auth/loginUser', async ({\n  email,\n  password\n}, thunkAPI) => {\n  // Simulate successful login\n  if (email === 'admin@example.com' && password === 'admin') {\n    return {\n      email\n    };\n  } else {\n    return thunkAPI.rejectWithValue('Invalid email or password');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.error = null;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.user = null;\n      state.error = action.payload;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","email","password","thunkAPI","rejectWithValue","authSlice","name","initialState","user","error","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","rejected","reducer"],"sources":["/Users/norzaliah/Documents/bug-tracker/client/src/features/authSlice.js"],"sourcesContent":["// client/src/features/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Fake login logic (replace with real API call)\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async ({ email, password }, thunkAPI) => {\n    // Simulate successful login\n    if (email === 'admin@example.com' && password === 'admin') {\n      return { email };\n    } else {\n      return thunkAPI.rejectWithValue('Invalid email or password');\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.error = null;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.user = null;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CACvC,gBAAgB,EAChB,OAAO;EAAEE,KAAK;EAAEC;AAAS,CAAC,EAAEC,QAAQ,KAAK;EACvC;EACA,IAAIF,KAAK,KAAK,mBAAmB,IAAIC,QAAQ,KAAK,OAAO,EAAE;IACzD,OAAO;MAAED;IAAM,CAAC;EAClB,CAAC,MAAM;IACL,OAAOE,QAAQ,CAACC,eAAe,CAAC,2BAA2B,CAAC;EAC9D;AACF,CACF,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,SAAS,CAACc,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDI,OAAO,CAACb,SAAS,CAACkB,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}